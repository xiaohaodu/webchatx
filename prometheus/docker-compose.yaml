networks:
  # monitor:
  #   driver: bridge
  #   name: monitor
  docker:
    external:
      name: docker

services:
  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./node_down.yml:/etc/prometheus/node_down.yml
      # 如果需要持久化数据，可以添加以下行
      - ./prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      # 可以根据需要添加其他命令行参数
    ports:
      - "9100:9090"
    networks:
      # - monitor
      - docker
  pushgateway:
    image: prom/pushgateway:v1.4.2
    container_name: pushgateway
    hostname: pushgateway
    restart: always
    ports:
      - "9101:9091" # 映射宿主机端口到容器端口
    networks:
      - docker
    # 如果需要持久化数据，可以添加持久化卷
    volumes:
      - ./pushgateway_data:/pushgateway

  # grafana:
  #   image: grafana/grafana:11.0.0
  #   container_name: grafana
  #   hostname: grafana
  #   restart: always
  #   volumes:
  #     # 持久化Grafana配置和数据
  #     - ./grafana_data:/var/lib/grafana
  #   environment:
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORGANIZATION=Main Org.
  #     - GF_AUTH_ANONYMOUS_ROLE=Admin # 生产环境中不建议使用Admin角色，请按需调整
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - monitor
  #     - docker

  # node-exporter:
  #   image: prom/node-exporter:v1.8.1
  #   container_name: node-exporter
  #   hostname: node-exporter
  #   restart: always
  #   ports:
  #     - "9100:9100"
  #   networks:
  #     - monitor
  #     - docker
